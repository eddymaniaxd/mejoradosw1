{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nexport const useDiagrama = () => {\n  _s();\n\n  const DrawContainer = (id, title, tecnologia, description) => {\n    return `Container(${id},\"${title}\",\"${tecnologia}\",\"${description}\")\\n`;\n  };\n\n  const DrawContainerDB = (id, title, tecnologia, description) => {\n    return `ContainerDb(${id},\"${title}\",\"${tecnologia}\",\"${description}\")\\n`;\n  };\n\n  const DrawSystemExtern = (id, title, description) => {\n    return `System_Ext(${id},\"${title}\",\"${description}\")\\n`;\n  };\n\n  const DrawRelation = (startId, endId, tecnologia) => {\n    return `Rel(${startId},${endId},\"Uses\",\"${tecnologia}\")\\n`;\n  };\n\n  const DrawPerson = (id, title, description) => {\n    return `Person(${id},${title},\"${description}\")\\n`;\n  };\n\n  const DrawComponent = (id, title, tecnologia, description) => {\n    return `Component(${id},\"${title}\",\"${tecnologia}\",\"${description}\")\\n`;\n  }; // DrawSystemBoundary se crea de manera directa\n\n\n  const executeDraw = useCallback((name, params) => {\n    switch (name) {\n      case \"DrawPerson\":\n        return DrawPerson(...params);\n\n      case \"DrawContainer\":\n        return DrawContainer(...params);\n\n      case \"DrawContainerDB\":\n        return DrawContainerDB(...params);\n\n      case \"DrawSystemExtern\":\n        return DrawSystemExtern(...params);\n\n      case \"DrawRelation\":\n        return DrawRelation(...params);\n\n      case \"DrawComponent\":\n        return DrawComponent(...params);\n\n      default:\n        console.log(\"Error nombre useDiagram\");\n        return \"\";\n    }\n  }, []);\n  return {\n    DrawContainer,\n    DrawContainerDB,\n    DrawSystemExtern,\n    DrawRelation,\n    DrawPerson,\n    executeDraw,\n    DrawComponent\n  };\n};\n\n_s(useDiagrama, \"p/BsO7+eTnX2AdGMcg0MDC1hGO4=\");","map":{"version":3,"sources":["C:/FDiagramaC4-master/src/hooks/useDiagrama.js"],"names":["useCallback","useDiagrama","DrawContainer","id","title","tecnologia","description","DrawContainerDB","DrawSystemExtern","DrawRelation","startId","endId","DrawPerson","DrawComponent","executeDraw","name","params","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAE7B,QAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,UAAZ,EAAwBC,WAAxB,KAAwC;AAC1D,WAAQ,aAAYH,EAAG,KAAIC,KAAM,MAAKC,UAAW,MAAKC,WAAY,MAAlE;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAG,CAACJ,EAAD,EAAKC,KAAL,EAAYC,UAAZ,EAAwBC,WAAxB,KAAwC;AAC5D,WAAQ,eAAcH,EAAG,KAAIC,KAAM,MAAKC,UAAW,MAAKC,WAAY,MAApE;AACH,GAFD;;AAIA,QAAME,gBAAgB,GAAG,CAACL,EAAD,EAAKC,KAAL,EAAYE,WAAZ,KAA4B;AACjD,WAAQ,cAAaH,EAAG,KAAIC,KAAM,MAAKE,WAAY,MAAnD;AACH,GAFD;;AAIA,QAAMG,YAAY,GAAG,CAACC,OAAD,EAAUC,KAAV,EAAiBN,UAAjB,KAAgC;AACjD,WAAQ,OAAMK,OAAQ,IAAGC,KAAM,YAAWN,UAAW,MAArD;AACH,GAFD;;AAIA,QAAMO,UAAU,GAAG,CAACT,EAAD,EAAKC,KAAL,EAAYE,WAAZ,KAA4B;AAC3C,WAAQ,UAASH,EAAG,IAAGC,KAAM,KAAIE,WAAY,MAA7C;AACH,GAFD;;AAIA,QAAMO,aAAa,GAAG,CAACV,EAAD,EAAKC,KAAL,EAAYC,UAAZ,EAAwBC,WAAxB,KAAwC;AAC1D,WAAQ,aAAYH,EAAG,KAAIC,KAAM,MAAKC,UAAW,MAAKC,WAAY,MAAlE;AACH,GAFD,CAtB6B,CA0B7B;;;AAEA,QAAMQ,WAAW,GAAGd,WAAW,CAAC,CAACe,IAAD,EAAOC,MAAP,KAAkB;AAC9C,YAAQD,IAAR;AACI,WAAK,YAAL;AACI,eAAOH,UAAU,CAAC,GAAGI,MAAJ,CAAjB;;AACJ,WAAK,eAAL;AACI,eAAOd,aAAa,CAAC,GAAGc,MAAJ,CAApB;;AACJ,WAAK,iBAAL;AACI,eAAOT,eAAe,CAAC,GAAGS,MAAJ,CAAtB;;AACJ,WAAK,kBAAL;AACI,eAAOR,gBAAgB,CAAC,GAAGQ,MAAJ,CAAvB;;AACJ,WAAK,cAAL;AACI,eAAOP,YAAY,CAAC,GAAGO,MAAJ,CAAnB;;AACJ,WAAK,eAAL;AACI,eAAOH,aAAa,CAAC,GAAGG,MAAJ,CAApB;;AACJ;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,eAAO,EAAP;AAfR;AAiBH,GAlB8B,EAkB5B,EAlB4B,CAA/B;AAoBA,SAAO;AACHhB,IAAAA,aADG;AAEHK,IAAAA,eAFG;AAGHC,IAAAA,gBAHG;AAIHC,IAAAA,YAJG;AAKHG,IAAAA,UALG;AAMHE,IAAAA,WANG;AAOHD,IAAAA;AAPG,GAAP;AAUH,CA1DM;;GAAMZ,W","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useDiagrama = () => {\n\n    const DrawContainer = (id, title, tecnologia, description) => {\n        return `Container(${id},\"${title}\",\"${tecnologia}\",\"${description}\")\\n`;\n    }\n\n    const DrawContainerDB = (id, title, tecnologia, description) => {\n        return `ContainerDb(${id},\"${title}\",\"${tecnologia}\",\"${description}\")\\n`;\n    }\n\n    const DrawSystemExtern = (id, title, description) => {\n        return `System_Ext(${id},\"${title}\",\"${description}\")\\n`;\n    }\n\n    const DrawRelation = (startId, endId, tecnologia) => {\n        return `Rel(${startId},${endId},\"Uses\",\"${tecnologia}\")\\n`;\n    }\n\n    const DrawPerson = (id, title, description) => {\n        return `Person(${id},${title},\"${description}\")\\n`;\n    }\n\n    const DrawComponent = (id, title, tecnologia, description) => {\n        return `Component(${id},\"${title}\",\"${tecnologia}\",\"${description}\")\\n`;\n    }\n\n    // DrawSystemBoundary se crea de manera directa\n\n    const executeDraw = useCallback((name, params) => {\n        switch (name) {\n            case \"DrawPerson\":\n                return DrawPerson(...params);\n            case \"DrawContainer\":\n                return DrawContainer(...params);\n            case \"DrawContainerDB\":\n                return DrawContainerDB(...params);\n            case \"DrawSystemExtern\":\n                return DrawSystemExtern(...params);\n            case \"DrawRelation\":\n                return DrawRelation(...params);\n            case \"DrawComponent\":\n                return DrawComponent(...params);\n            default:\n                console.log(\"Error nombre useDiagram\");\n                return \"\";\n        }\n    }, []);\n\n    return {\n        DrawContainer,\n        DrawContainerDB,\n        DrawSystemExtern,\n        DrawRelation,\n        DrawPerson,\n        executeDraw,\n        DrawComponent\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}