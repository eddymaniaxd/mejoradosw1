{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nexport const useSocket = serverPath => {\n  _s();\n\n  const [socket, setSocket] = useState(null);\n  const [online, setOnline] = useState(false);\n  const conectarSocket = useCallback(() => {\n    let token = JSON.parse(atob(localStorage.getItem(\"keyID\"))) || null;\n    let socketTemp = io(serverPath, {\n      transports: [\"websocket\"],\n      forceNew: true,\n      query: {\n        idsocket: token.id\n      }\n    });\n    setSocket(socketTemp);\n  }, [serverPath]);\n  const desconectarSocket = useCallback(() => {\n    socket === null || socket === void 0 ? void 0 : socket.disconnect();\n  }, [socket]);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.on(\"connect\", () => {\n      setOnline(true);\n    });\n  }, [socket]);\n  useEffect(() => {\n    setOnline(socket === null || socket === void 0 ? void 0 : socket.connected);\n  }, [socket]);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.on(\"disconnect\", () => {\n      setOnline(false);\n    });\n  }, [socket]);\n  return {\n    socket,\n    online,\n    conectarSocket,\n    desconectarSocket\n  };\n};\n\n_s(useSocket, \"SKRXjXoDAgP8wdfuQClq9cZ3l8w=\");","map":{"version":3,"sources":["C:/sw1/FDiagramaC4-master/src/hooks/useSocket.js"],"names":["useCallback","useEffect","useState","io","useSocket","serverPath","socket","setSocket","online","setOnline","conectarSocket","token","JSON","parse","atob","localStorage","getItem","socketTemp","transports","forceNew","query","idsocket","id","desconectarSocket","disconnect","on","connected"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAO,MAAMC,SAAS,GAAIC,UAAD,IAAgB;AAAA;;AAErC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMQ,cAAc,GAAGV,WAAW,CAAC,MAAM;AAErC,QAAIW,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAf,KAAmD,IAA/D;AAEA,QAAIC,UAAU,GAAGd,EAAE,CAACE,UAAD,EAAa;AAC5Ba,MAAAA,UAAU,EAAE,CAAC,WAAD,CADgB;AAE5BC,MAAAA,QAAQ,EAAE,IAFkB;AAG5BC,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAEV,KAAK,CAACW;AADb;AAHqB,KAAb,CAAnB;AAQAf,IAAAA,SAAS,CAACU,UAAD,CAAT;AAEH,GAdiC,EAc/B,CAACZ,UAAD,CAd+B,CAAlC;AAgBA,QAAMkB,iBAAiB,GAAGvB,WAAW,CAAC,MAAM;AACxCM,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEkB,UAAR;AACH,GAFoC,EAElC,CAAClB,MAAD,CAFkC,CAArC;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEmB,EAAR,CAAW,SAAX,EAAsB,MAAM;AACxBhB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFD;AAGH,GAJQ,EAIN,CAACH,MAAD,CAJM,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAACH,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEoB,SAAT,CAAT;AACH,GAFQ,EAEN,CAACpB,MAAD,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEmB,EAAR,CAAW,YAAX,EAAyB,MAAM;AAC3BhB,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAFD;AAGH,GAJQ,EAIN,CAACH,MAAD,CAJM,CAAT;AAMA,SAAO;AACHA,IAAAA,MADG;AAEHE,IAAAA,MAFG;AAGHE,IAAAA,cAHG;AAIHa,IAAAA;AAJG,GAAP;AAMH,CA/CM;;GAAMnB,S","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { io } from 'socket.io-client';\n\nexport const useSocket = (serverPath) => {\n\n    const [socket, setSocket] = useState(null);\n    const [online, setOnline] = useState(false);\n\n    const conectarSocket = useCallback(() => {\n\n        let token = JSON.parse(atob(localStorage.getItem(\"keyID\"))) || null;\n\n        let socketTemp = io(serverPath, {\n            transports: [\"websocket\"],\n            forceNew: true,\n            query: {\n                idsocket: token.id\n            }\n        });\n\n        setSocket(socketTemp);\n\n    }, [serverPath]);\n\n    const desconectarSocket = useCallback(() => {\n        socket?.disconnect();\n    }, [socket]);\n\n    useEffect(() => {\n        socket?.on(\"connect\", () => {\n            setOnline(true);\n        });\n    }, [socket]);\n\n    useEffect(() => {\n        setOnline(socket?.connected);\n    }, [socket]);\n\n    useEffect(() => {\n        socket?.on(\"disconnect\", () => {\n            setOnline(false);\n        });\n    }, [socket]);\n\n    return {\n        socket,\n        online,\n        conectarSocket,\n        desconectarSocket\n    }\n}\n"]},"metadata":{},"sourceType":"module"}