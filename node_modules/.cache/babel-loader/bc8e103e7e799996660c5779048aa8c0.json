{"ast":null,"code":"var _jsxFileName = \"C:\\\\sw1\\\\FDiagramaC4-master\\\\src\\\\components\\\\FormDelete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useParams } from 'react-router';\nimport socketContext from '../context/socketContext';\nimport { useForm } from '../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormDelete = props => {\n  _s();\n\n  const {\n    idsala\n  } = useParams();\n  const {\n    socket\n  } = useContext(socketContext);\n  const {\n    sourceRel,\n    setsourceDiagram,\n    DrawDiagram,\n    setSourceRel\n  } = props;\n  const {\n    value,\n    HandleInputChange,\n    reset\n  } = useForm({\n    eliminar: \"option\"\n  });\n  const {\n    eliminar\n  } = value;\n\n  const HandleClikSubmit = e => {\n    e.preventDefault();\n    let regexFind = new RegExp(`\\\\S*${eliminar}\\\\S*\\n`, \"gi\");\n    let regexCierre = new RegExp(`}\\n`, \"gi\");\n\n    if (eliminar.includes('limit')) {\n      setsourceDiagram(dataSource => {\n        let res = dataSource.replace(regexFind, \"\");\n        res = res.replace(regexCierre, \"\");\n        console.log(res);\n        return res;\n      });\n    } else {\n      setsourceDiagram(dataSource => {\n        let res = dataSource.replace(regexFind, \"\");\n        console.log(res);\n        return res;\n      });\n    } // Eliminando id \n\n\n    setSourceRel(ArrayIds => {\n      let idFilters = ArrayIds.filter(idRel => idRel !== eliminar);\n      return idFilters;\n    }); // Params por Defecto\n\n    DrawDiagram();\n    socket.emit(\"eliminar-element\", {\n      idsala,\n      idElement: eliminar\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: HandleClikSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"eliminar\",\n        className: \"form-select\",\n        defaultValue: eliminar,\n        onChange: HandleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"option\",\n          children: \"Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), sourceRel.map(rel => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: rel,\n          children: rel\n        }, rel, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mx-1\",\n        \"data-bs-dismiss\": \"modal\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        \"data-bs-dismiss\": \"modal\",\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormDelete, \"JTKfzJ30M37uPkK4+kbU5BLlIRc=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = FormDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDelete\");","map":{"version":3,"sources":["C:/sw1/FDiagramaC4-master/src/components/FormDelete.js"],"names":["React","useContext","useParams","socketContext","useForm","FormDelete","props","idsala","socket","sourceRel","setsourceDiagram","DrawDiagram","setSourceRel","value","HandleInputChange","reset","eliminar","HandleClikSubmit","e","preventDefault","regexFind","RegExp","regexCierre","includes","dataSource","res","replace","console","log","ArrayIds","idFilters","filter","idRel","emit","idElement","map","rel"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useParams } from 'react-router';\nimport socketContext from '../context/socketContext';\nimport { useForm } from '../hooks/useForm';\n\nexport const FormDelete = (props) => {\n\n    const { idsala } = useParams();\n    const { socket } = useContext(socketContext);\n    const { sourceRel, setsourceDiagram, DrawDiagram, setSourceRel } = props;\n\n    const { value, HandleInputChange, reset } = useForm({\n        eliminar: \"option\"\n    });\n\n    const { eliminar } = value;\n\n    const HandleClikSubmit = (e) => {\n        e.preventDefault();\n\n        let regexFind = new RegExp(`\\\\S*${eliminar}\\\\S*\\n`, \"gi\");\n        let regexCierre = new RegExp(`}\\n`, \"gi\");\n\n        if (eliminar.includes('limit')) {\n\n            setsourceDiagram((dataSource) => {\n\n                let res = dataSource.replace(regexFind, \"\");\n                res = res.replace(regexCierre, \"\")\n                console.log(res);\n                return res;\n\n            });\n\n        } else {\n\n            setsourceDiagram((dataSource) => {\n\n                let res = dataSource.replace(regexFind, \"\");\n                console.log(res);\n                return res;\n\n            });\n\n        }\n\n        // Eliminando id \n        setSourceRel((ArrayIds) => {\n            let idFilters = ArrayIds.filter((idRel) => idRel !== eliminar);\n            return idFilters;\n        });\n\n        // Params por Defecto\n        DrawDiagram();\n\n        socket.emit(\"eliminar-element\", {\n            idsala,\n            idElement: eliminar\n        });\n\n        reset();\n    }\n\n    return (\n        <form onSubmit={HandleClikSubmit}>\n            <div className='my-2'>\n                <select name={\"eliminar\"} className=\"form-select\" defaultValue={eliminar} onChange={HandleInputChange}>\n\n                    <option value=\"option\">Option</option>\n\n                    {\n                        sourceRel.map((rel) => (\n                            <option key={rel} value={rel}>{rel}</option>\n                        ))\n                    }\n\n                </select>\n            </div>\n\n            <div className='my-2'>\n                <button type=\"button\" className=\"btn btn-secondary mx-1\" data-bs-dismiss=\"modal\">Close</button>\n                <button className=\"btn btn-primary mx-1\" data-bs-dismiss=\"modal\" >Eliminar</button>\n            </div>\n        </form>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}