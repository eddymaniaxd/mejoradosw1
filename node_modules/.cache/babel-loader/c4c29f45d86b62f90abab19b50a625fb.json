{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { apiDiagrama } from '../api/apiDiagrama';\nimport { authContext } from '../context/authContext';\nexport const useSala = (InitialState = null) => {\n  _s();\n\n  const {\n    auth\n  } = useContext(authContext);\n  const [sala, setSala] = useState(InitialState);\n  const [isAnfitrion, setisAnfitrion] = useState(false);\n  const [error, seterror] = useState(\"\");\n  const [validate, setvalidate] = useState(true);\n  const {\n    idsala\n  } = useParams();\n  const getSala = useCallback(async () => {\n    const res = await apiDiagrama(`/sala/getOne/${idsala}`);\n\n    if (!res.ok) {\n      setvalidate(false);\n      seterror(\"El id es invalido!!!\");\n      return;\n    }\n\n    setvalidate(false);\n    const {\n      data\n    } = res;\n    const {\n      anfitrion,\n      usuarios,\n      active\n    } = data;\n\n    if (!active) {\n      seterror(\"La sala no esta activa!!!\");\n      return;\n    }\n\n    if (anfitrion === auth.id) {\n      setSala(data);\n      setisAnfitrion(true);\n      return;\n    }\n\n    const result = usuarios.find(elemet => elemet === auth.id);\n\n    if (result === undefined) {\n      seterror(\"No tiene permiso del anfitrion!!!\");\n      return;\n    }\n\n    seterror(\"\");\n    setSala(data);\n  }, [auth.id, idsala]);\n  useEffect(() => {\n    getSala();\n  }, [getSala]);\n  return {\n    sala,\n    error,\n    auth,\n    isAnfitrion,\n    validate\n  };\n}; //ola\n\n_s(useSala, \"8eyeBBlgjAKLXRoCnONt1HXvx/o=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["C:/FDiagramaC4-master/src/hooks/useSala.js"],"names":["useCallback","useContext","useEffect","useState","useParams","apiDiagrama","authContext","useSala","InitialState","auth","sala","setSala","isAnfitrion","setisAnfitrion","error","seterror","validate","setvalidate","idsala","getSala","res","ok","data","anfitrion","usuarios","active","id","result","find","elemet","undefined"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,YAAY,GAAG,IAAhB,KAAyB;AAAA;;AAE5C,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACK,WAAD,CAA3B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACK,YAAD,CAAhC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAad,SAAS,EAA5B;AAEA,QAAMe,OAAO,GAAGnB,WAAW,CAAC,YAAY;AAEpC,UAAMoB,GAAG,GAAG,MAAMf,WAAW,CAAE,gBAAea,MAAO,EAAxB,CAA7B;;AAEA,QAAI,CAACE,GAAG,CAACC,EAAT,EAAa;AACTJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACA;AACH;;AAEDE,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAWF,GAAjB;AACA,UAAM;AAAEG,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAkCH,IAAxC;;AAEA,QAAI,CAACG,MAAL,EAAa;AACTV,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACA;AACH;;AAED,QAAIQ,SAAS,KAAKd,IAAI,CAACiB,EAAvB,EAA2B;AACvBf,MAAAA,OAAO,CAACW,IAAD,CAAP;AACAT,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA;AACH;;AAED,UAAMc,MAAM,GAAGH,QAAQ,CAACI,IAAT,CAAeC,MAAD,IAAYA,MAAM,KAAKpB,IAAI,CAACiB,EAA1C,CAAf;;AAEA,QAAIC,MAAM,KAAKG,SAAf,EAA0B;AACtBf,MAAAA,QAAQ,CAAC,mCAAD,CAAR;AACA;AACH;;AACDA,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAJ,IAAAA,OAAO,CAACW,IAAD,CAAP;AAEH,GAnC0B,EAmCxB,CAACb,IAAI,CAACiB,EAAN,EAAUR,MAAV,CAnCwB,CAA3B;AAqCAhB,EAAAA,SAAS,CAAC,MAAM;AAEZiB,IAAAA,OAAO;AAEV,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;AAMA,SAAO;AACHT,IAAAA,IADG;AAEHI,IAAAA,KAFG;AAGHL,IAAAA,IAHG;AAIHG,IAAAA,WAJG;AAKHI,IAAAA;AALG,GAAP;AAOH,CA5DM,C,CA6DP;;GA7DaT,O;UAQUH,S","sourcesContent":["import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { apiDiagrama } from '../api/apiDiagrama';\r\nimport { authContext } from '../context/authContext';\r\n\r\nexport const useSala = (InitialState = null) => {\r\n\r\n    const { auth } = useContext(authContext);\r\n    const [sala, setSala] = useState(InitialState);\r\n    const [isAnfitrion, setisAnfitrion] = useState(false);\r\n    const [error, seterror] = useState(\"\");\r\n    const [validate, setvalidate] = useState(true);\r\n\r\n    const { idsala } = useParams();\r\n\r\n    const getSala = useCallback(async () => {\r\n\r\n        const res = await apiDiagrama(`/sala/getOne/${idsala}`);\r\n\r\n        if (!res.ok) {\r\n            setvalidate(false);\r\n            seterror(\"El id es invalido!!!\");\r\n            return;\r\n        }\r\n\r\n        setvalidate(false);\r\n\r\n        const { data } = res;\r\n        const { anfitrion, usuarios, active } = data;\r\n\r\n        if (!active) {\r\n            seterror(\"La sala no esta activa!!!\");\r\n            return;\r\n        }\r\n\r\n        if (anfitrion === auth.id) {\r\n            setSala(data)\r\n            setisAnfitrion(true);\r\n            return;\r\n        }\r\n\r\n        const result = usuarios.find((elemet) => elemet === auth.id);\r\n\r\n        if (result === undefined) {\r\n            seterror(\"No tiene permiso del anfitrion!!!\");\r\n            return;\r\n        }\r\n        seterror(\"\");\r\n        setSala(data);\r\n\r\n    }, [auth.id, idsala]);\r\n\r\n    useEffect(() => {\r\n\r\n        getSala();\r\n\r\n    }, [getSala]);\r\n\r\n    return {\r\n        sala,\r\n        error,\r\n        auth,\r\n        isAnfitrion,\r\n        validate\r\n    }\r\n}\r\n//ola"]},"metadata":{},"sourceType":"module"}