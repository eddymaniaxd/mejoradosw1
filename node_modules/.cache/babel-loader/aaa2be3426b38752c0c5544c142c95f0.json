{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { apiDiagrama } from \"../api/apiDiagrama\";\nexport const useLoadSala = idUser => {\n  _s();\n\n  const [salas, setsalas] = useState([]);\n\n  const agregar = sala => {\n    setsalas([...salas, sala]);\n  };\n\n  const eliminar = idSala => {\n    let salasFiltradas = salas.filter(sala => sala._id !== idSala);\n    setsalas(salasFiltradas);\n  };\n\n  const update = (idSala, update) => {\n    let salasUpdated = salas.map(sala => {\n      if (sala._id === idSala) {\n        return { ...sala,\n          ...update\n        };\n      }\n\n      return sala;\n    });\n    setsalas(salasUpdated);\n  };\n\n  useEffect(() => {\n    const LoadSala = async () => {\n      let res = await apiDiagrama(`/sala/list/${idUser}`);\n\n      if (!res.ok) {\n        console.warn(res.message);\n      }\n\n      setsalas(res.data);\n    };\n\n    LoadSala();\n  }, [idUser]);\n  return {\n    salas,\n    agregar,\n    eliminar,\n    update\n  };\n};\n\n_s(useLoadSala, \"cW/NnqKEZGd/c+N21cSdv/YM5z8=\");","map":{"version":3,"sources":["C:/FDiagramaC4-master/src/hooks/useLoadSala.js"],"names":["useEffect","useState","apiDiagrama","useLoadSala","idUser","salas","setsalas","agregar","sala","eliminar","idSala","salasFiltradas","filter","_id","update","salasUpdated","map","LoadSala","res","ok","console","warn","message","data"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAGA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAY;AAAA;;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAIA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACtBF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,IAAX,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAIC,cAAc,GAAGN,KAAK,CAACO,MAAN,CAAcJ,IAAD,IAAWA,IAAI,CAACK,GAAL,KAAaH,MAArC,CAArB;AACAJ,IAAAA,QAAQ,CAACK,cAAD,CAAR;AACH,GAHD;;AAKA,QAAMG,MAAM,GAAG,CAACJ,MAAD,EAASI,MAAT,KAAoB;AAE/B,QAAIC,YAAY,GAAGV,KAAK,CAACW,GAAN,CAAWR,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACK,GAAL,KAAaH,MAAjB,EAAyB;AACrB,eAAO,EAAE,GAAGF,IAAL;AAAW,aAAGM;AAAd,SAAP;AACH;;AACD,aAAON,IAAP;AACH,KALkB,CAAnB;AAOAF,IAAAA,QAAQ,CAACS,YAAD,CAAR;AACH,GAVD;;AAYAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,QAAQ,GAAG,YAAY;AACzB,UAAIC,GAAG,GAAG,MAAMhB,WAAW,CAAE,cAAaE,MAAO,EAAtB,CAA3B;;AACA,UAAI,CAACc,GAAG,CAACC,EAAT,EAAa;AACTC,QAAAA,OAAO,CAACC,IAAR,CAAaH,GAAG,CAACI,OAAjB;AACH;;AACDhB,MAAAA,QAAQ,CAACY,GAAG,CAACK,IAAL,CAAR;AACH,KAND;;AAUAN,IAAAA,QAAQ;AACX,GAZQ,EAYN,CAACb,MAAD,CAZM,CAAT;AAcA,SAAO;AACHC,IAAAA,KADG;AAEHE,IAAAA,OAFG;AAGHE,IAAAA,QAHG;AAIHK,IAAAA;AAJG,GAAP;AAMH,CA/CM;;GAAMX,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { apiDiagrama } from \"../api/apiDiagrama\";\n\n\nexport const useLoadSala = (idUser) => {\n\n    const [salas, setsalas] = useState([]);\n\n    \n\n    const agregar = (sala) => {\n        setsalas([...salas, sala]);\n    }\n\n    const eliminar = (idSala) => {\n        let salasFiltradas = salas.filter((sala) => (sala._id !== idSala));\n        setsalas(salasFiltradas);\n    }\n\n    const update = (idSala, update) => {\n\n        let salasUpdated = salas.map((sala) => {\n            if (sala._id === idSala) {\n                return { ...sala, ...update }\n            }\n            return sala;\n        });\n\n        setsalas(salasUpdated);\n    }\n\n    useEffect(() => {\n        const LoadSala = async () => {\n            let res = await apiDiagrama(`/sala/list/${idUser}`);\n            if (!res.ok) {\n                console.warn(res.message);\n            }\n            setsalas(res.data);\n        }\n\n\n\n        LoadSala();\n    }, [idUser]);\n\n    return {\n        salas,\n        agregar,\n        eliminar,\n        update\n    }\n}\n"]},"metadata":{},"sourceType":"module"}